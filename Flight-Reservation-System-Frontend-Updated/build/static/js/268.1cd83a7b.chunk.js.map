{"version":3,"file":"static/js/268.1cd83a7b.chunk.js","mappings":"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","sources":["components/custom-alert.jsx","modules/booking/payment.jsx","services/seat-booking-services.js","../node_modules/@material-ui/core/esm/DialogContentText/DialogContentText.js","../node_modules/@material-ui/core/esm/DialogContent/DialogContent.js","../node_modules/@material-ui/icons/esm/ErrorOutline.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Button } from \"@material-ui/core\";\nimport { ErrorOutline } from '@material-ui/icons';\n\nconst CustomAlert = ({ title, message, open, onClose }) => {\n  return (\n    <Dialog open={open} onClose={onClose}>\n      <DialogTitle style={{ textAlign: 'center', background: 'black', color: 'white', padding: '10px 0' }}>\n        <ErrorOutline style={{ fontSize: '2rem', verticalAlign: 'middle', marginRight: '5px', color: 'white' }} />\n        <span style={{ color: 'white' }}>{title}</span>\n      </DialogTitle>\n      <DialogContent style={{ background: 'white', padding: '20px' }}>\n        <DialogContentText style={{ fontSize: '16px', textAlign: 'center' }}>\n          {message}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions style={{ justifyContent: 'center', background: 'white', padding: '10px' }}>\n        <Button\n          onClick={onClose}\n          color=\"primary\"\n          variant=\"contained\"\n          style={{ background: 'black', color: 'white' }}\n        >\n          OK\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nCustomAlert.propTypes = {\n  title: PropTypes.string.isRequired,\n  message: PropTypes.string.isRequired,\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired\n};\n\nexport default CustomAlert;\n","import React, { useState } from 'react';\nimport { useHistory, useLocation } from 'react-router';\nimport { Button } from \"@material-ui/core\";\nimport CustomAlert from '../../components/custom-alert';\nimport { useUserInfoSession } from \"../../components/header/user-context\";\nimport SeatBookingServices from \"../../services/seat-booking-services\";\n\nimport './payment.css';\n\nconst seatPrice = Math.floor(Math.random() * 101);\n\nfunction Payment() {\n  const history = useHistory();\n  const [cardNumber, setCardNumber] = useState('');\n  const [expiry, setExpiry] = useState('');\n  const [cvv, setCVV] = useState('');\n  const [name, setName] = useState('');\n  const [cardNumberError, setCardNumberError] = useState('');\n  const [nameError, setNameError] = useState('');\n  const [cvvError, setCVVError] = useState('');\n  const [expiryError, setExpiryError] = useState('');\n  const [paymentSuccess, setPaymentSuccess] = useState(false);\n  const [paymentError, setPaymentError] = useState(false);\n  const { userInfoSession, appendToUserInfoSession } = useUserInfoSession();\n  const basePrice = userInfoSession.amountToBePaid;\n  const totalAmount = basePrice + seatPrice;\n  // const location = useLocation();\n\n  const handlePayment = async (event) => {\n    event.preventDefault();\n\n    const cardNumberPattern = /^\\d{16}$/;\n    const namePattern = /^[A-Za-z\\s]+$/;\n    const cvvPattern = /^\\d{3}$/;\n    const expiryPattern = /^(0[1-9]|1[0-2])\\/\\d{2}$/;\n    const sanitizedCardNumber = cardNumber.replace(/\\s/g, '');\n\n    let cardNumberError = '';\n    if (!cardNumberPattern.test(sanitizedCardNumber)) {\n      cardNumberError = 'Invalid card number';\n    }\n\n    let nameError = '';\n    if (!namePattern.test(name)) {\n      nameError = 'Invalid name';\n    }\n\n    let cvvError = '';\n    if (!cvvPattern.test(cvv)) {\n      cvvError = 'Invalid CVV';\n    }\n\n    const currentDate = new Date();\n    const currentYear = currentDate.getFullYear() % 100;\n    const currentMonth = currentDate.getMonth() + 1;\n\n    const [inputMonth, inputYear] = expiry.split('/');\n\n    let expiryError = '';\n    if (!expiryPattern.test(expiry)) {\n      expiryError = 'Invalid expiry date (MM/YY)';\n    } else if (inputYear < currentYear || (inputYear === currentYear && inputMonth < currentMonth)) {\n      expiryError = 'Expiry date must be in the future';\n    }\n\n    setCardNumberError(cardNumberError);\n    setNameError(nameError);\n    setCVVError(cvvError);\n    setExpiryError(expiryError);\n\n    if (cardNumberError || nameError || cvvError || expiryError) {\n      setPaymentSuccess(false);\n      return false;\n    }\n\n    const getClassFromSeatNumber = (seatNumber) => {\n      if (seatNumber && seatNumber.startsWith) { // Check if seatNumber is defined and has a startsWith method\n        if (seatNumber.startsWith('F')) {\n          return 'First Class';\n        } else if (seatNumber.startsWith('B')) {\n          return 'Business Class';\n        } else if (seatNumber.startsWith('E')) {\n          return 'Economy Class';\n        }\n      }\n      return 'Unknown Class';\n    };\n\n    const fetchReservationResponse = async () => {\n      const reservationResponse = await SeatBookingServices.createReservation(\n        userInfoSession.selectedFlightNumber, \n        userInfoSession.userId, \n        userInfoSession.selectedSeat, \n        userInfoSession.amountToBePaid\n        );\n        console.log('Seat reservation info from Backend: ', reservationResponse);\n        if (reservationResponse.bookingId) {\n          setPaymentSuccess(true);\n        } else {\n          setPaymentError(true);\n        }\n    }\n    fetchReservationResponse();\n    appendToUserInfoSession({\n      seatPrice: seatPrice,\n    })\n  };\n\n  const getClassFromSeatNumber = (seatNumber) => {\n    if (seatNumber && seatNumber.startsWith) { // Check if seatNumber is defined and has a startsWith method\n      if (seatNumber.startsWith('F')) {\n        return 'First Class';\n      } else if (seatNumber.startsWith('B')) {\n        return 'Business Class';\n      } else if (seatNumber.startsWith('E')) {\n        return 'Economy Class';\n      }\n    }\n    return 'Unknown Class';\n  };\n  \n  const handleAlertClose = () => {\n    setPaymentSuccess(false);\n    if (paymentSuccess) {\n      history.push('/confirmation');\n    }\n  };\n\n  const cardNumberErrorMessage = cardNumberError ? (\n    <div className=\"error-message\" style={{ color: 'red' }}>{cardNumberError}</div>\n  ) : null;\n  const nameErrorMessage = nameError ? (\n    <div className=\"error-message\" style={{ color: 'red' }}>{nameError}</div>\n  ) : null;\n  const cvvErrorMessage = cvvError ? (\n    <div className=\"error-message\" style={{ color: 'red' }}>{cvvError}</div>\n  ) : null;\n  const expiryErrorMessage = expiryError ? (\n    <div className=\"error-message\" style={{ color: 'red' }}>{expiryError}</div>\n  ) : null;\n\n  return (\n    <div>\n      <div className=\"flight-details-container\">\n        <h2>Cost Breakdown</h2>\n        <table>\n          <tbody>\n            <tr>\n              <td>Ticket Fare (Inclusive of all Taxes)</td>\n              <td>₹{basePrice}</td>\n            </tr>\n            <tr>\n              <td>Seat Selection Price</td>\n              <td>\n                ₹{seatPrice}\n              </td>\n            </tr>\n            <tr>\n              <td>Amount</td>\n              <td>₹{totalAmount}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <div className=\"card p-3\">\n              <div className=\"card-body border p-0\">\n                <div className=\"collapse show p-3 pt-0\">\n                  <div className=\"row\">\n                    <div className=\"col-12\">\n                      <form action=\"\" className=\"form\">\n                        <div className=\"row\">\n                          <div className=\"col-12\">\n                            <div className=\"form__div\">\n                              <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Card Number\"\n                                value={cardNumber}\n                                onChange={(e) => {\n                                  const inputValue = e.target.value;\n                                  const sanitizedInput = inputValue.replace(/\\D/g, '').substring(0, 16);\n                                  const formattedInput = sanitizedInput.replace(/(\\d{4})/g, '$1 ').trim();\n                                  setCardNumber(formattedInput);\n                                  setCardNumberError('');\n                                }}\n                              />\n                              {cardNumberErrorMessage}\n                            </div>\n                          </div>\n\n                          <div className=\"col-6\">\n                            <div className=\"form__div\" style={{ display: 'flex' }}>\n                              <div style={{ flex: 1, marginRight: '10px' }}>\n                                <div>\n                                  <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"MM / YY\"\n                                    value={expiry}\n                                    onChange={(e) => {\n                                      const inputValue = e.target.value;\n                                      const sanitizedInput = inputValue.replace(/\\D/g, '').substring(0, 4);\n                                      const formattedInput = sanitizedInput.replace(/(\\d{2})(\\d{0,2})/, '$1/$2');\n                                      const [inputMonth, inputYear] = formattedInput.split('/');\n                                      const isValidMonth = inputMonth >= '01' && inputMonth <= '12';\n                                      const isValidYear = inputYear >= '23' && inputYear <= '28';\n                                      setExpiry(formattedInput);\n                                      setExpiryError(\n                                        !isValidMonth || !isValidYear\n                                          ? 'Invalid expiry date (MM / YY)'\n                                          : ''\n                                      );\n                                    }}\n                                  />\n                                </div>\n                                {expiryErrorMessage}\n                              </div>\n\n                              <div style={{ flex: 1 }}>\n                                <div>\n                                  <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"CVV\"\n                                    value={cvv}\n                                    onChange={(e) => {\n                                      const inputValue = e.target.value;\n                                      const sanitizedInput = inputValue.replace(/\\D/g, '').substring(0, 3);\n                                      setCVV(sanitizedInput);\n                                      setCVVError(\n                                        sanitizedInput.length !== 3\n                                          ? 'CVV must be a 3-digit number'\n                                          : ''\n                                      );\n                                    }}\n                                  />\n                                </div>\n                                {cvvErrorMessage}\n                              </div>\n                            </div>\n                          </div>\n\n                          <div className=\"col-12\">\n                            <div className=\"form__div\">\n                              <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Firstname Lastname\"\n                                value={name}\n                                onChange={(e) => {\n                                  setName(e.target.value);\n                                  setNameError('');\n                                }}\n                              />\n                              {nameErrorMessage}\n                            </div>\n                          </div>\n\n                          <div style={{ marginBottom: '20px' }}></div>\n                          <div className=\"col-12\">\n                            <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                              <Button\n                                style={{ backgroundColor: '#000', color: '#fff', flex: 1, marginRight: '5px' }}\n                                onClick={handlePayment}\n                              >\n                                Confirm Payment\n                              </Button>\n                              <Button\n                                style={{ backgroundColor: '#ccc', color: '#000', flex: 1, marginLeft: '5px' }}\n                                onClick={() => {\n                                  setCardNumber('');\n                                  setExpiry('');\n                                  setCVV('');\n                                  setName('');\n                                  setCardNumberError('');\n                                  setNameError('');\n                                  setCVVError('');\n                                  setExpiryError('');\n                                }}\n                              >\n                                Clear Selection\n                              </Button>\n                            </div>\n                          </div>\n                        </div>\n                      </form>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <CustomAlert\n        title=\"Payment Successful\"\n        message=\"Your payment was successful!\"\n        open={paymentSuccess}\n        onClose={handleAlertClose}\n      />\n        <CustomAlert\n        title=\"Payment Failed! Please Retry\"\n        message=\"Your payment was denied please retry or use different card!\"\n        open={paymentError}\n        onClose={handlePayment}\n      />\n    </div>\n  );\n}\n\nexport default Payment;\n","import {LOCAL_BACKEND_BASE_URL} from \"../constants\";\nimport axios from 'axios';\n\nexport default class SeatBookingServices {\n    static getAllSeats = (flightNumber) => {\n        const getAllSeatsURL = LOCAL_BACKEND_BASE_URL + 'booking/getAllSeats/' + flightNumber;\n        return axios.get(getAllSeatsURL)\n            .then(response => {\n                return response.data;\n            })\n            .catch(error => {\n                console.log(\"Error in Backend call, sending back empty seats\", error);\n                return []\n            })\n    }\n\n    static bookSeats = (flightNumber, userId, seatNumber, seatClass, price) => {\n        const bookSeatsURL = LOCAL_BACKEND_BASE_URL + 'booking/bookSeats/' + flightNumber + '/' + userId;\n        const bookSeatsRequest = {\n            seatNumber: seatNumber,\n            seatClass: seatClass,\n            price: price,\n            booked: false\n        }\n\n        return axios.post(bookSeatsURL, bookSeatsRequest)\n            .then(response => {\n                return response.data;\n            })\n            .catch(error => {\n                console.log(\"Error in Backend call, sending back empty booking\", error);\n                return null;\n            })\n    }\n\n    static createReservation = (flightNumber, userId, seatNumber, price) => {\n        const createReservationURL = LOCAL_BACKEND_BASE_URL + 'payment/createReservation/' + flightNumber + '/' + userId + '/' + seatNumber;\n        const createReservation = {\n            totalTravelFair: price\n        }\n\n        return axios.post(createReservationURL, createReservation)\n            .then(response => {\n                return response.data;\n            })\n            .catch(error => {\n                console.log(\"Error in Backend call, sending back empty reservation\", error);\n                return null;\n            })\n    }\n\n    static selectFlight = (userId, flightNumber, departure, arrival, departureDate, departureTime, arrivalDate, arrivalTime) => {\n        const selectFlightURL = LOCAL_BACKEND_BASE_URL + 'booking/bookFlights/' + userId;\n        const selectFlightRequest = {\n            flightNumber: flightNumber,\n            departure: departure,\n            arrival: arrival,\n            departureDate: departureDate,\n            departureTime: departureTime,\n            arrivalDate: arrivalDate,\n            arrivalTime: arrivalTime,\n            seatAvailability: 30\n        }\n\n        return axios.post(selectFlightURL, selectFlightRequest)\n            .then(response => {\n                return response.data;\n            })\n            .catch(error => {\n                console.log(\"Error in Backend call, sending back empty select flight\", error);\n                return null;\n            })\n    }\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    marginBottom: 12\n  }\n};\nvar DialogContentText = /*#__PURE__*/React.forwardRef(function DialogContentText(props, ref) {\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    component: \"p\",\n    variant: \"body1\",\n    color: \"textSecondary\",\n    ref: ref\n  }, props));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContentText.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogContentText'\n})(DialogContentText);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      flex: '1 1 auto',\n      WebkitOverflowScrolling: 'touch',\n      // Add iOS momentum scrolling.\n      overflowY: 'auto',\n      padding: '8px 24px',\n      '&:first-child': {\n        // dialog without title\n        paddingTop: 20\n      }\n    },\n\n    /* Styles applied to the root element if `dividers={true}`. */\n    dividers: {\n      padding: '16px 24px',\n      borderTop: \"1px solid \".concat(theme.palette.divider),\n      borderBottom: \"1px solid \".concat(theme.palette.divider)\n    }\n  };\n};\nvar DialogContent = /*#__PURE__*/React.forwardRef(function DialogContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$dividers = props.dividers,\n      dividers = _props$dividers === void 0 ? false : _props$dividers,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"dividers\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, dividers && classes.dividers),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Display the top and bottom dividers.\n   */\n  dividers: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogContent'\n})(DialogContent);","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'ErrorOutline');"],"names":["_ref","title","message","open","onClose","_jsxs","Dialog","children","DialogTitle","style","textAlign","background","color","padding","_jsx","ErrorOutline","fontSize","verticalAlign","marginRight","DialogContent","DialogContentText","DialogActions","justifyContent","Button","onClick","variant","seatPrice","Math","floor","random","history","useHistory","cardNumber","setCardNumber","useState","expiry","setExpiry","cvv","setCVV","name","setName","cardNumberError","setCardNumberError","nameError","setNameError","cvvError","setCVVError","expiryError","setExpiryError","paymentSuccess","setPaymentSuccess","paymentError","setPaymentError","userInfoSession","appendToUserInfoSession","useUserInfoSession","basePrice","amountToBePaid","totalAmount","handlePayment","async","event","preventDefault","sanitizedCardNumber","replace","test","currentDate","Date","currentYear","getFullYear","currentMonth","getMonth","inputMonth","inputYear","split","reservationResponse","SeatBookingServices","createReservation","selectedFlightNumber","userId","selectedSeat","console","log","bookingId","fetchReservationResponse","cardNumberErrorMessage","className","nameErrorMessage","cvvErrorMessage","expiryErrorMessage","action","type","placeholder","value","onChange","e","formattedInput","target","substring","trim","display","flex","isValidMonth","isValidYear","sanitizedInput","length","marginBottom","alignItems","backgroundColor","marginLeft","CustomAlert","handleAlertClose","push","getAllSeats","flightNumber","getAllSeatsURL","LOCAL_BACKEND_BASE_URL","axios","get","then","response","data","catch","error","bookSeats","seatNumber","seatClass","price","bookSeatsURL","bookSeatsRequest","booked","post","createReservationURL","totalTravelFair","selectFlight","departure","arrival","departureDate","departureTime","arrivalDate","arrivalTime","selectFlightURL","selectFlightRequest","seatAvailability","React","props","ref","Typography","_extends","component","withStyles","root","classes","_props$dividers","dividers","other","_objectWithoutProperties","clsx","theme","WebkitOverflowScrolling","overflowY","paddingTop","borderTop","concat","palette","divider","borderBottom","createSvgIcon","d"],"sourceRoot":""}