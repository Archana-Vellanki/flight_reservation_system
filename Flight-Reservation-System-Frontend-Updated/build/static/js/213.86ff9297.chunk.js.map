{"version":3,"file":"static/js/213.86ff9297.chunk.js","mappings":"wKAEA,SAAeA,E,QAAAA,GAA4BC,EAAAA,cAAoB,OAAQ,CACrEC,EAAG,mJACD,Q,kFCQJ,MAiOA,EAjOwBC,IACpB,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,CACrCC,aAAa,GACbC,UAAU,GACVC,QAAQ,GACRC,cAAc,GACdC,cAAe,GACfC,YAAY,GACZC,YAAY,GACZC,iBAAiB,MAEdC,EAAWC,IAAcV,EAAAA,EAAAA,UAAS,IACxB,IAAbS,GACFE,EAAAA,EAAaC,uBAAuBC,MACjCC,IACC,IAAIC,EAAM,GACVD,EAAIE,KAAKC,SAAQC,IACfH,EAAII,KAAKD,EAAQjB,aAAa,IAEhCS,EAAWK,EAAI,IAIrB,MAAOK,EAAcC,IAAmBrB,EAAAA,EAAAA,WAAS,IAC1CsB,EAAMC,IAAWvB,EAAAA,EAAAA,WAAS,IAC1BwB,EAAeC,IAAoBzB,EAAAA,EAAAA,UAAS,IAE7C0B,EAAsBA,KAC1BH,GAAQ,EAAK,EAGTI,EAAwBC,IAC5BL,GAAQ,GACJH,GACFvB,EAAMgC,QAAQV,KAAK,CAACW,SAAS,UAC/B,EAGIC,EAAgBC,IAClB,MAAM,KAAEC,EAAI,MAAEL,GAAUI,EAAEE,OAC1BnC,GAAaoC,IAAQ,IAChBA,EACH,CAACF,GAAOL,KACP,EA4CP,OACIQ,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAEC,QAAS,OACvBC,cAAe,SACfC,WAAY,SACZC,SAAU,QACVC,OAAQ,OACRC,QAAS,MACTC,OAAQ,kBAGNC,SAAA,EACFC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,4BAEJT,EAAAA,EAAAA,MAAA,QAAMC,MAAQ,CAACU,MAAO,MACpBC,UAAW,QAAQH,SAAA,EAEjBC,EAAAA,EAAAA,KAACG,EAAAA,EAAS,CACVC,MAAM,gBACNC,QAAQ,WACRlB,KAAK,eACLL,MAAO9B,EAASG,aAChBmD,SAAUrB,EACVsB,WAAS,EACTX,OAAO,YAENI,EAAAA,EAAAA,KAACG,EAAAA,EAAS,CACPC,MAAM,YACNC,QAAQ,WACRlB,KAAK,YACLL,MAAO9B,EAASI,UAChBkD,SAAUrB,EACVsB,WAAS,EACTX,OAAO,YAEXI,EAAAA,EAAAA,KAACG,EAAAA,EAAS,CACNC,MAAM,UACNC,QAAQ,WACRlB,KAAK,UACLL,MAAO9B,EAASK,QAChBiD,SAAUrB,EACVsB,WAAS,EACTX,OAAO,YAEbI,EAAAA,EAAAA,KAACG,EAAAA,EAAS,CACJC,MAAM,iBACNC,QAAQ,WACRlB,KAAK,gBACLqB,KAAK,OACL1B,MAAO9B,EAASM,cAChBgD,SAAUrB,EACVsB,WAAS,EACTX,OAAO,SACPa,WAAY,CAAEC,KAAK,IAAIC,MAAOC,cAAcC,MAAM,KAAK,IACvDC,gBAAiB,CACbC,QAAQ,MAGlBf,EAAAA,EAAAA,KAACG,EAAAA,EAAS,CACJC,MAAM,iBACNC,QAAQ,WACRlB,KAAK,gBACLqB,KAAK,OACLQ,YAAY,QACZlC,MAAO9B,EAASO,cAChB+C,SAAUrB,EACVsB,WAAS,EACTX,OAAO,SACPkB,gBAAiB,CACbC,QAAQ,MAGdf,EAAAA,EAAAA,KAACG,EAAAA,EAAS,CACRC,MAAM,eACNC,QAAQ,WACRlB,KAAK,cACL6B,YAAY,aACZR,KAAK,OACLC,WAAY,CAAEC,KAAK,IAAIC,MAAOC,cAAcC,MAAM,KAAK,IACvD/B,MAAO9B,EAASQ,YAChB8C,SAAUrB,EACVsB,WAAS,EACTX,OAAO,SACPkB,gBAAiB,CACbC,QAAQ,MAGhBf,EAAAA,EAAAA,KAACG,EAAAA,EAAS,CACNC,MAAM,eACNC,QAAQ,WACRlB,KAAK,cACLqB,KAAK,OACLQ,YAAY,QACZlC,MAAO9B,EAASS,YAChB6C,SAAUrB,EACVsB,WAAS,EACTX,OAAO,SACPkB,gBAAiB,CACbC,QAAQ,MAGff,EAAAA,EAAAA,KAACG,EAAAA,EAAS,CACPC,MAAM,oBACNC,QAAQ,WACRlB,KAAK,mBACLL,MAAO9B,EAASU,iBAChB4C,SAAUrB,EACVsB,WAAS,EACTX,OAAO,YAIbI,EAAAA,EAAAA,KAACiB,EAAAA,EAAM,CAACC,UAAU,eACdb,QAAQ,YACRc,MAAM,UACNC,WAAapB,EAAAA,EAAAA,KAACqB,EAAI,CAAAtB,SAAC,SACnBuB,QAAUpC,GA7JIqC,MAEpB,IAAK,MAAOC,EAAK1C,KAAU2C,OAAOC,QAAQ1E,GACxC,GAAa,IAAT8B,EAKF,OAJA6C,QAAQC,IAAI,iBACZjD,EAAiB,iCACjBJ,GAAgB,QAChBK,IAMJ,OAAIjB,EAAUkE,SAAS7E,EAASG,eAC9BwB,EAAiB,WAAY3B,EAASG,aAAe,oBACrDoB,GAAgB,QAChBK,KAKE5B,EAASK,SAAWL,EAASI,WAC/BuB,EAAiB,gDACjBJ,GAAgB,QAChBK,UAIFf,EAAAA,EAAaiE,kBAAkB,EAAG9E,GAAWe,MAAMC,IAC5CA,EAAIE,KAAK2D,SAAS,iBAGjBlD,EAAiB,qCACjBJ,GAAgB,GAChBK,MAEFL,GAAgB,GAChBI,EAAiBX,EAAIE,MACrBU,IACF,GACF,EAqHoB2C,SAItBjC,EAAAA,EAAAA,MAACyC,EAAAA,EAAM,CACPvD,KAAMA,EACNwD,QAASnD,EACT,kBAAgB,qBAChB,mBAAiB,2BAA0BkB,SAAA,EAEzCC,EAAAA,EAAAA,KAACiC,EAAAA,EAAW,CAACC,GAAG,qBAAoBnC,SACjCrB,KAEHsB,EAAAA,EAAAA,KAACmC,EAAAA,EAAa,CAACzC,WAAW,SAAQK,UAChCC,EAAAA,EAAAA,KAACiB,EAAAA,EAAM,CAACC,UAAU,eAAeI,QAASzC,EAAsBuD,WAAS,EAAArC,SAAC,iBAK1E,C,gDCvOZ,MAAMsC,EAAuB,qCAiC7B,YA/BA,MACEP,iBAAAA,CAAkBQ,EAAOC,GACvB,OAAOC,EAAAA,EAAMC,KAAKJ,EAAuB,eAAiBC,EAAOC,EACnE,CAEAzE,oBAAAA,GAA+B,IAAVwE,EAAKI,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAC,EACzB,OAAOF,EAAAA,EAAMK,IAAIR,EAAuB,kBAAoBC,EAC9D,CAEAQ,2BAAAA,CAA4BR,EAAOnF,EAAcoF,GAE/C,OADAZ,QAAQC,IAAIW,GACLC,EAAAA,EAAMO,IACXV,EAAuB,iBAAmBC,EAAQ,IAAMnF,EACxDoF,EAEJ,CAEAS,mBAAAA,GAAuD,IAAnCV,EAAKI,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAC,EAAGvF,EAAYuF,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAAEL,EAASG,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAClD,OAAOJ,EAAAA,EAAMS,OACXZ,EAAuB,iBAAmBC,EAAQ,IAAMnF,EACxD,CAACe,KAAMqE,GAEX,CAEAW,iBAAAA,CAAkB/F,GAChB,OAAOqF,EAAAA,EAAMK,IACXR,EAAuB,uBAAyBlF,EAEpD,E,2JCoBEgG,EAA8BtG,EAAAA,YAAiB,SAAwBE,EAAOqG,GAChF,IAAIrD,EAAWhD,EAAMgD,SACjBsD,EAAUtG,EAAMsG,QAChBnC,EAAYnE,EAAMmE,UAClBoC,EAAmBvG,EAAMwG,UACzBC,OAAiC,IAArBF,EAA8B,IAAMA,EAQhDG,GAPW1G,EAAM2G,SACT3G,EAAM4G,MACL5G,EAAM6G,OACL7G,EAAM8G,QACP9G,EAAM6C,OACJ7C,EAAM+G,SACP/G,EAAMsD,SACR0D,EAAAA,EAAAA,GAAyBhH,EAAO,CAAC,WAAY,UAAW,YAAa,YAAa,WAAY,QAAS,SAAU,UAAW,SAAU,WAAY,aAE1JiH,GAAiBC,EAAAA,EAAAA,KACjBC,GAAMC,EAAAA,EAAAA,GAAiB,CACzBpH,MAAOA,EACPiH,eAAgBA,EAChBI,OAAQ,CAAC,UAAW,SAAU,WAAY,QAAS,SAAU,UAAW,cAE1E,OAAoBvH,EAAAA,cAAoB2G,GAAWa,EAAAA,EAAAA,GAAS,CAC1DnD,WAAWoD,EAAAA,EAAAA,GAAKjB,EAAQkB,MAAuB,WAAhBL,EAAI7D,SAAwC,aAAhB6D,EAAI7D,UAA2BgD,EAAQmB,UAAWtD,EAAWgD,EAAIR,UAAYL,EAAQK,SAAUQ,EAAIP,OAASN,EAAQM,MAAOO,EAAIN,QAAUP,EAAQO,OAAQM,EAAIL,SAAWR,EAAQQ,QAASK,EAAIJ,UAAYT,EAAQS,SAAyB,UAAfI,EAAItE,QAAsByD,EAAQoB,aACxTrB,IAAKA,GACJK,GAAqB,MAAb1D,EAGXlD,EAAAA,cAAoB,OAAQ,CAC1B6H,wBAAyB,CACvBC,OAAQ,aAEP5E,EACP,IAqEA,SAAe6E,EAAAA,EAAAA,IAjJK,SAAgBC,GAClC,MAAO,CAELN,MAAMF,EAAAA,EAAAA,GAAS,CACblD,MAAO0D,EAAMC,QAAQC,KAAKC,WACzBH,EAAMI,WAAWC,QAAS,CAC3BC,UAAW,OACXjF,UAAW,EACXN,OAAQ,EACR,aAAc,CACZuB,MAAO0D,EAAMC,QAAQC,KAAKrB,UAE5B,UAAW,CACTvC,MAAO0D,EAAMC,QAAQnB,MAAMyB,QAK/BzB,MAAO,CAAC,EAGRD,SAAU,CAAC,EAGXe,YAAa,CACXvE,UAAW,GAIbsE,UAAW,CACTa,WAAY,GACZC,YAAa,IAIfzB,QAAS,CAAC,EAGVD,OAAQ,CAAC,EAGTE,SAAU,CAAC,EAEf,GAsGkC,CAChC3E,KAAM,qBADR,CAEGgE,G,cC7ICoC,EAAmB,CACrBC,SAAUC,EAAAA,EACV7B,OAAQ8B,EAAAA,EACRC,SAAUC,EAAAA,GAuCRzF,EAAyBtD,EAAAA,YAAiB,SAAmBE,EAAOqG,GACtE,IAAIyC,EAAe9I,EAAM8I,aACrBC,EAAmB/I,EAAMqF,UACzBA,OAAiC,IAArB0D,GAAsCA,EAClD/F,EAAWhD,EAAMgD,SACjBsD,EAAUtG,EAAMsG,QAChBnC,EAAYnE,EAAMmE,UAClB6E,EAAehJ,EAAMoE,MACrBA,OAAyB,IAAjB4E,EAA0B,UAAYA,EAC9CC,EAAejJ,EAAMiJ,aACrBC,EAAkBlJ,EAAM2G,SACxBA,OAA+B,IAApBuC,GAAqCA,EAChDC,EAAenJ,EAAM4G,MACrBA,OAAyB,IAAjBuC,GAAkCA,EAC1CC,EAAsBpJ,EAAMoJ,oBAC5BC,EAAmBrJ,EAAMwD,UACzBA,OAAiC,IAArB6F,GAAsCA,EAClDC,EAAatJ,EAAMsJ,WACnBC,EAAcvJ,EAAMuJ,YACpBpE,EAAKnF,EAAMmF,GACXpB,EAAkB/D,EAAM+D,gBACxBL,EAAa1D,EAAM0D,WACnB8F,EAAaxJ,EAAMwJ,WACnBC,EAAWzJ,EAAMyJ,SACjBpG,EAAQrD,EAAMqD,MACdqG,EAAmB1J,EAAM2J,UACzBA,OAAiC,IAArBD,GAAsCA,EAClDtH,EAAOpC,EAAMoC,KACbwH,EAAS5J,EAAM4J,OACfrG,EAAWvD,EAAMuD,SACjBsG,EAAU7J,EAAM6J,QAChB5F,EAAcjE,EAAMiE,YACpB6F,EAAkB9J,EAAM+G,SACxBA,OAA+B,IAApB+C,GAAqCA,EAChDC,EAAO/J,EAAM+J,KACbC,EAAUhK,EAAMgK,QAChBC,EAAgBjK,EAAMkK,OACtBA,OAA2B,IAAlBD,GAAmCA,EAC5CE,EAAcnK,EAAMmK,YACpB1G,EAAOzD,EAAMyD,KACb1B,EAAQ/B,EAAM+B,MACdqI,EAAiBpK,EAAMsD,QACvBA,OAA6B,IAAnB8G,EAA4B,WAAaA,EACnD1D,GAAQM,EAAAA,EAAAA,GAAyBhH,EAAO,CAAC,eAAgB,YAAa,WAAY,UAAW,YAAa,QAAS,eAAgB,WAAY,QAAS,sBAAuB,YAAa,aAAc,cAAe,KAAM,kBAAmB,aAAc,aAAc,WAAY,QAAS,YAAa,OAAQ,SAAU,WAAY,UAAW,cAAe,WAAY,OAAQ,UAAW,SAAU,cAAe,OAAQ,QAAS,YAQrb,IAAIqK,GAAY,CAAC,EAEjB,GAAgB,aAAZ/G,IACES,GAAqD,qBAA3BA,EAAgBC,SAC5CqG,GAAUC,QAAUvG,EAAgBC,QAGlCX,GAAO,CACT,IAAIkH,GAEAC,GAA2I,QAAxHD,GAA4C,OAApBxG,QAAgD,IAApBA,OAA6B,EAASA,EAAgBgD,gBAAgD,IAA1BwD,GAAmCA,GAAwBxD,EAClNsD,GAAUhH,MAAqBvD,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMuD,EAAOmH,IAAmB,QACrG,CAGEN,IAEGC,GAAgBA,EAAYM,SAC/BJ,GAAUlF,QAAKU,GAGjBwE,GAAU,yBAAsBxE,GAGlC,IAAI6E,GAAepB,GAAcnE,EAAK,GAAGwF,OAAOxF,EAAI,qBAAkBU,EAClE+E,GAAevH,GAAS8B,EAAK,GAAGwF,OAAOxF,EAAI,eAAYU,EACvDgF,GAAiBrC,EAAiBlF,GAClCwH,GAA4BhL,EAAAA,cAAoB+K,IAAgBvD,EAAAA,EAAAA,GAAS,CAC3E,mBAAoBoD,GACpB5B,aAAcA,EACdzD,UAAWA,EACX4D,aAAcA,EACdzF,UAAWA,EACXmG,UAAWA,EACXvH,KAAMA,EACN2H,KAAMA,EACNC,QAASA,EACTvG,KAAMA,EACN1B,MAAOA,EACPoD,GAAIA,EACJsE,SAAUA,EACVG,OAAQA,EACRrG,SAAUA,EACVsG,QAASA,EACT5F,YAAaA,EACbP,WAAYA,GACX2G,GAAWb,IACd,OAAoB1J,EAAAA,cAAoBiL,EAAAA,GAAazD,EAAAA,EAAAA,GAAS,CAC5DnD,WAAWoD,EAAAA,EAAAA,GAAKjB,EAAQkB,KAAMrD,GAC9BwC,SAAUA,EACVC,MAAOA,EACPpD,UAAWA,EACX+F,YAAaA,EACblD,IAAKA,EACLU,SAAUA,EACV3C,MAAOA,EACPd,QAASA,GACRoD,GAAQrD,GAAsBvD,EAAAA,cAAoBkL,EAAAA,GAAY1D,EAAAA,EAAAA,GAAS,CACxE2D,QAAS9F,EACTA,GAAIyF,IACH7G,GAAkBV,GAAQ6G,EAAsBpK,EAAAA,cAAoBoL,EAAAA,GAAQ5D,EAAAA,EAAAA,GAAS,CACtF,mBAAoBoD,GACpBvF,GAAIA,EACJgG,QAASP,GACT7I,MAAOA,EACPqJ,MAAON,IACNX,GAAcnH,GAAY8H,GAAcxB,GAA2BxJ,EAAAA,cAAoBsG,GAAgBkB,EAAAA,EAAAA,GAAS,CACjHnC,GAAIuF,IACHtB,GAAsBE,GAC3B,IAiMA,SAAezB,EAAAA,EAAAA,GA9VK,CAElBL,KAAM,CAAC,GA4VyB,CAChCpF,KAAM,gBADR,CAEGgB,E","sources":["../node_modules/@material-ui/icons/esm/Save.js","modules/admin/AdminAddFlight.jsx","services/AdminService.js","../node_modules/@material-ui/core/esm/FormHelperText/FormHelperText.js","../node_modules/@material-ui/core/esm/TextField/TextField.js"],"sourcesContent":["import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');","import { Save } from '@material-ui/icons';\nimport {\n    TextField,\n    Button,\n    Dialog,\n    DialogActions,\n    DialogTitle\n  } from \"@material-ui/core\";\nimport React, { useState } from 'react';\nimport AdminService from \"../../services/AdminService\";\nimport \"./admin.css\";\n\nconst AdminAddFlight = (props) => {\n    const [formData, setFormData] = useState({\n        flightNumber:\"\",\n        departure:\"\",\n        arrival:\"\",\n        departureDate:\"\",\n        departureTime: \"\",\n        arrivalDate:\"\",\n        arrivalTime:\"\",\n        seatAvailability:\"\"\n      });\n    const [flightIds, setFormIds] = useState(\"\")\n    if (flightIds == \"\") {\n      AdminService.getAllFlightsDetails().then(\n        (ret) => {\n          var arr = []\n          ret.data.forEach(element => {\n            arr.push(element.flightNumber)\n          });\n          setFormIds(arr)\n        }\n      )\n    }\n    const [navigateBack, setNavigateBack] = useState(false)\n    const [open, setOpen] = useState(false);\n    const [selectedValue, setSelectedValue] = useState(\"\");\n  \n    const handleDialogBoxOpen = () => {\n      setOpen(true);\n    };\n  \n    const handleDialogBoxClose = (value) => {\n      setOpen(false);\n      if (navigateBack) {\n        props.history.push({pathname:`/admin`})\n      }\n    };\n  \n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData((prevData) => ({\n          ...prevData,\n          [name]: value,\n        }));\n      };\n    const handleSaveClick = () =>{\n        // check if any data is empty\n        for (const [key, value] of Object.entries(formData)){\n          if (value == \"\") {\n            console.log(\"empty fields!\")\n            setSelectedValue(\"Empty fields are not allowed!\")\n            setNavigateBack(false)\n            handleDialogBoxOpen()\n            return\n          }\n        }\n\n        // check flight number existance\n        if (flightIds.includes(formData.flightNumber)) {\n          setSelectedValue(\"Flight: \"+ formData.flightNumber + \" already exists!\")\n          setNavigateBack(false)\n          handleDialogBoxOpen()\n          return\n        }\n\n        // check that arrival and departure are not same\n        if (formData.arrival == formData.departure) {\n          setSelectedValue(\"Arrival and departure cities cannot be same!\")\n          setNavigateBack(false)\n          handleDialogBoxOpen()\n          return\n        }\n\n        AdminService.saveFlightDetails(1, formData ).then((ret)=>{\n            if(ret.data.includes(\"successfully\")){\n                //alert(\"Flight details Added successfully\");\n                //props.history.push({pathname:`/admin`});\n                setSelectedValue(\"Flight details added successfully\")\n                setNavigateBack(true)\n                handleDialogBoxOpen()\n            } else {\n              setNavigateBack(false)\n              setSelectedValue(ret.data)\n              handleDialogBoxOpen()\n            }\n        })\n    }\n    return (\n        <div style={{ display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        maxWidth: '400px',\n        margin: 'auto',\n        padding: '3px',\n        border: '1px solid #ccc',\n        //borderRadius: theme.shape.borderRadius,\n        //boxShadow: theme.shadows[3]\n        }}>\n        <h2>Add Flight Information</h2>\n   \n        <form style ={{width: '70%',\n          marginTop: '15px'}}\n        >\n            <TextField\n            label=\"Flight Number\"\n            variant=\"outlined\"\n            name=\"flightNumber\"\n            value={formData.flightNumber}\n            onChange={handleChange}\n            fullWidth\n            margin=\"normal\"\n            />\n             <TextField\n                label=\"Departure\"\n                variant=\"outlined\"\n                name=\"departure\"\n                value={formData.departure}\n                onChange={handleChange}\n                fullWidth\n                margin=\"normal\"\n            />\n            <TextField\n                label=\"Arrival\"\n                variant=\"outlined\"\n                name=\"arrival\"\n                value={formData.arrival}\n                onChange={handleChange}\n                fullWidth\n                margin=\"normal\"\n            />\n          <TextField\n                label=\"Departure Date\"\n                variant=\"outlined\"\n                name=\"departureDate\"\n                type=\"date\"\n                value={formData.departureDate}\n                onChange={handleChange}\n                fullWidth\n                margin=\"normal\"\n                inputProps={{ min: new Date().toISOString().split('T')[0]}}\n                InputLabelProps={{\n                    shrink: true,\n                  }}\n            />\n          <TextField\n                label=\"Departure Time\"\n                variant=\"outlined\"\n                name=\"departureTime\"\n                type=\"time\"\n                placeholder='HH:MM'\n                value={formData.departureTime}\n                onChange={handleChange}\n                fullWidth\n                margin=\"normal\"\n                InputLabelProps={{\n                    shrink: true,\n                }}\n            />\n              <TextField\n                label=\"Arrival Date\"\n                variant=\"outlined\"\n                name=\"arrivalDate\"\n                placeholder='DD/MM/YYYY'\n                type=\"date\"\n                inputProps={{ min: new Date().toISOString().split('T')[0]}}\n                value={formData.arrivalDate}\n                onChange={handleChange}\n                fullWidth\n                margin=\"normal\"\n                InputLabelProps={{\n                    shrink: true,\n                }}\n            />\n            <TextField\n                label=\"Arrival Time\"\n                variant=\"outlined\"\n                name=\"arrivalTime\"\n                type=\"time\"\n                placeholder='HH:MM'\n                value={formData.arrivalTime}\n                onChange={handleChange}\n                fullWidth\n                margin=\"normal\"\n                InputLabelProps={{\n                    shrink: true,\n                }}\n            />\n             <TextField\n                label=\"Seat Availability\"\n                variant=\"outlined\"\n                name=\"seatAvailability\"\n                value={formData.seatAvailability}\n                onChange={handleChange}\n                fullWidth\n                margin=\"normal\"\n            />\n          {/* Add other form fields as needed */}\n  \n          <Button className=\"black-button\"\n              variant=\"contained\"\n              color=\"primary\"\n              startIcon = {<Save>Save</Save>}\n              onClick={(e) => handleSaveClick()}\n            >\n            </Button>\n        </form>\n        <Dialog\n        open={open}\n        onClose={handleDialogBoxClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">\n            {selectedValue}\n          </DialogTitle>\n          <DialogActions alignItems=\"center\">\n            <Button className=\"black-button\" onClick={handleDialogBoxClose} autoFocus>\n              Close\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    )\n}\n\nexport default AdminAddFlight;","import axios from \"axios\";\n\nconst BOOKING_API_BASE_URL = \"http://localhost:8080/adminControl\";\n\nclass AdminService {\n  saveFlightDetails(admin, flightobj) {\n    return axios.post(BOOKING_API_BASE_URL + \"/saveflight/\" + admin, flightobj);\n  }\n\n  getAllFlightsDetails(admin=1) {\n    return axios.get(BOOKING_API_BASE_URL + \"/getAllFlights/\" + admin);\n  }\n\n  updateFlightsDetailsAsAdmin(admin, flightNumber, flightobj) {\n    console.log(flightobj)\n    return axios.put(\n      BOOKING_API_BASE_URL + \"/updateFlight/\" + admin + \"/\" + flightNumber,\n      flightobj\n    );\n  }\n\n  DeleteFlightDetails(admin=0, flightNumber, flightobj) {\n    return axios.delete(\n      BOOKING_API_BASE_URL + \"/deleteFlight/\" + admin + \"/\" + flightNumber,\n      {data: flightobj}\n    );\n  }\n\n  getAllReservation(flightNumber) {\n    return axios.get(\n      BOOKING_API_BASE_URL + \"/viewAllReservation/\" + flightNumber\n    );\n  }\n}\n\nexport default new AdminService();","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({\n      color: theme.palette.text.secondary\n    }, theme.typography.caption, {\n      textAlign: 'left',\n      marginTop: 3,\n      margin: 0,\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      },\n      '&$error': {\n        color: theme.palette.error.main\n      }\n    }),\n\n    /* Pseudo-class applied to the root element if `error={true}`. */\n    error: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `margin=\"dense\"`. */\n    marginDense: {\n      marginTop: 4\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` or `variant=\"outlined\"`. */\n    contained: {\n      marginLeft: 14,\n      marginRight: 14\n    },\n\n    /* Pseudo-class applied to the root element if `focused={true}`. */\n    focused: {},\n\n    /* Pseudo-class applied to the root element if `filled={true}`. */\n    filled: {},\n\n    /* Pseudo-class applied to the root element if `required={true}`. */\n    required: {}\n  };\n};\nvar FormHelperText = /*#__PURE__*/React.forwardRef(function FormHelperText(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'p' : _props$component,\n      disabled = props.disabled,\n      error = props.error,\n      filled = props.filled,\n      focused = props.focused,\n      margin = props.margin,\n      required = props.required,\n      variant = props.variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"disabled\", \"error\", \"filled\", \"focused\", \"margin\", \"required\", \"variant\"]);\n\n  var muiFormControl = useFormControl();\n  var fcs = formControlState({\n    props: props,\n    muiFormControl: muiFormControl,\n    states: ['variant', 'margin', 'disabled', 'error', 'filled', 'focused', 'required']\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, (fcs.variant === 'filled' || fcs.variant === 'outlined') && classes.contained, className, fcs.disabled && classes.disabled, fcs.error && classes.error, fcs.filled && classes.filled, fcs.focused && classes.focused, fcs.required && classes.required, fcs.margin === 'dense' && classes.marginDense),\n    ref: ref\n  }, other), children === ' ' ?\n  /*#__PURE__*/\n  // eslint-disable-next-line react/no-danger\n  React.createElement(\"span\", {\n    dangerouslySetInnerHTML: {\n      __html: '&#8203;'\n    }\n  }) : children);\n});\nprocess.env.NODE_ENV !== \"production\" ? FormHelperText.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   *\n   * If `' '` is provided, the component reserves one line height for displaying a future message.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the helper text should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, helper text should be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the helper text should use filled classes key.\n   */\n  filled: PropTypes.bool,\n\n  /**\n   * If `true`, the helper text should use focused classes key.\n   */\n  focused: PropTypes.bool,\n\n  /**\n   * If `dense`, will adjust vertical spacing. This is normally obtained via context from\n   * FormControl.\n   */\n  margin: PropTypes.oneOf(['dense']),\n\n  /**\n   * If `true`, the helper text should use required classes key.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormHelperText'\n})(FormHelperText);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport Input from '../Input';\nimport FilledInput from '../FilledInput';\nimport OutlinedInput from '../OutlinedInput';\nimport InputLabel from '../InputLabel';\nimport FormControl from '../FormControl';\nimport FormHelperText from '../FormHelperText';\nimport Select from '../Select';\nimport withStyles from '../styles/withStyles';\nvar variantComponent = {\n  standard: Input,\n  filled: FilledInput,\n  outlined: OutlinedInput\n};\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {}\n};\n/**\n * The `TextField` is a convenience wrapper for the most common cases (80%).\n * It cannot be all things to all people, otherwise the API would grow out of control.\n *\n * ## Advanced Configuration\n *\n * It's important to understand that the text field is a simple abstraction\n * on top of the following components:\n *\n * - [FormControl](/api/form-control/)\n * - [InputLabel](/api/input-label/)\n * - [FilledInput](/api/filled-input/)\n * - [OutlinedInput](/api/outlined-input/)\n * - [Input](/api/input/)\n * - [FormHelperText](/api/form-helper-text/)\n *\n * If you wish to alter the props applied to the `input` element, you can do so as follows:\n *\n * ```jsx\n * const inputProps = {\n *   step: 300,\n * };\n *\n * return <TextField id=\"time\" type=\"time\" inputProps={inputProps} />;\n * ```\n *\n * For advanced cases, please look at the source of TextField by clicking on the\n * \"Edit this page\" button above. Consider either:\n *\n * - using the upper case props for passing values directly to the components\n * - using the underlying components directly as shown in the demos\n */\n\nvar TextField = /*#__PURE__*/React.forwardRef(function TextField(props, ref) {\n  var autoComplete = props.autoComplete,\n      _props$autoFocus = props.autoFocus,\n      autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      defaultValue = props.defaultValue,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$error = props.error,\n      error = _props$error === void 0 ? false : _props$error,\n      FormHelperTextProps = props.FormHelperTextProps,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      helperText = props.helperText,\n      hiddenLabel = props.hiddenLabel,\n      id = props.id,\n      InputLabelProps = props.InputLabelProps,\n      inputProps = props.inputProps,\n      InputProps = props.InputProps,\n      inputRef = props.inputRef,\n      label = props.label,\n      _props$multiline = props.multiline,\n      multiline = _props$multiline === void 0 ? false : _props$multiline,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      placeholder = props.placeholder,\n      _props$required = props.required,\n      required = _props$required === void 0 ? false : _props$required,\n      rows = props.rows,\n      rowsMax = props.rowsMax,\n      _props$select = props.select,\n      select = _props$select === void 0 ? false : _props$select,\n      SelectProps = props.SelectProps,\n      type = props.type,\n      value = props.value,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"autoComplete\", \"autoFocus\", \"children\", \"classes\", \"className\", \"color\", \"defaultValue\", \"disabled\", \"error\", \"FormHelperTextProps\", \"fullWidth\", \"helperText\", \"hiddenLabel\", \"id\", \"InputLabelProps\", \"inputProps\", \"InputProps\", \"inputRef\", \"label\", \"multiline\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"placeholder\", \"required\", \"rows\", \"rowsMax\", \"select\", \"SelectProps\", \"type\", \"value\", \"variant\"]);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (select && !children) {\n      console.error('Material-UI: `children` must be passed when using the `TextField` component with `select`.');\n    }\n  }\n\n  var InputMore = {};\n\n  if (variant === 'outlined') {\n    if (InputLabelProps && typeof InputLabelProps.shrink !== 'undefined') {\n      InputMore.notched = InputLabelProps.shrink;\n    }\n\n    if (label) {\n      var _InputLabelProps$requ;\n\n      var displayRequired = (_InputLabelProps$requ = InputLabelProps === null || InputLabelProps === void 0 ? void 0 : InputLabelProps.required) !== null && _InputLabelProps$requ !== void 0 ? _InputLabelProps$requ : required;\n      InputMore.label = /*#__PURE__*/React.createElement(React.Fragment, null, label, displayRequired && \"\\xA0*\");\n    }\n  }\n\n  if (select) {\n    // unset defaults from textbox inputs\n    if (!SelectProps || !SelectProps.native) {\n      InputMore.id = undefined;\n    }\n\n    InputMore['aria-describedby'] = undefined;\n  }\n\n  var helperTextId = helperText && id ? \"\".concat(id, \"-helper-text\") : undefined;\n  var inputLabelId = label && id ? \"\".concat(id, \"-label\") : undefined;\n  var InputComponent = variantComponent[variant];\n  var InputElement = /*#__PURE__*/React.createElement(InputComponent, _extends({\n    \"aria-describedby\": helperTextId,\n    autoComplete: autoComplete,\n    autoFocus: autoFocus,\n    defaultValue: defaultValue,\n    fullWidth: fullWidth,\n    multiline: multiline,\n    name: name,\n    rows: rows,\n    rowsMax: rowsMax,\n    type: type,\n    value: value,\n    id: id,\n    inputRef: inputRef,\n    onBlur: onBlur,\n    onChange: onChange,\n    onFocus: onFocus,\n    placeholder: placeholder,\n    inputProps: inputProps\n  }, InputMore, InputProps));\n  return /*#__PURE__*/React.createElement(FormControl, _extends({\n    className: clsx(classes.root, className),\n    disabled: disabled,\n    error: error,\n    fullWidth: fullWidth,\n    hiddenLabel: hiddenLabel,\n    ref: ref,\n    required: required,\n    color: color,\n    variant: variant\n  }, other), label && /*#__PURE__*/React.createElement(InputLabel, _extends({\n    htmlFor: id,\n    id: inputLabelId\n  }, InputLabelProps), label), select ? /*#__PURE__*/React.createElement(Select, _extends({\n    \"aria-describedby\": helperTextId,\n    id: id,\n    labelId: inputLabelId,\n    value: value,\n    input: InputElement\n  }, SelectProps), children) : InputElement, helperText && /*#__PURE__*/React.createElement(FormHelperText, _extends({\n    id: helperTextId\n  }, FormHelperTextProps), helperText));\n});\nprocess.env.NODE_ENV !== \"production\" ? TextField.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * This prop helps users to fill forms faster, especially on mobile devices.\n   * The name can be confusing, as it's more like an autofill.\n   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).\n   */\n  autoComplete: PropTypes.string,\n\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * The default value of the `input` element.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the `input` element will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label will be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * Props applied to the [`FormHelperText`](/api/form-helper-text/) element.\n   */\n  FormHelperTextProps: PropTypes.object,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The helper text content.\n   */\n  helperText: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  hiddenLabel: PropTypes.bool,\n\n  /**\n   * The id of the `input` element.\n   * Use this prop to make `label` and `helperText` accessible for screen readers.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Props applied to the [`InputLabel`](/api/input-label/) element.\n   */\n  InputLabelProps: PropTypes.object,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Props applied to the Input element.\n   * It will be a [`FilledInput`](/api/filled-input/),\n   * [`OutlinedInput`](/api/outlined-input/) or [`Input`](/api/input/)\n   * component depending on the `variant` prop value.\n   */\n  InputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The label content.\n   */\n  label: PropTypes.node,\n\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   */\n  margin: PropTypes.oneOf(['dense', 'none', 'normal']),\n\n  /**\n   * If `true`, a textarea element will be rendered instead of an input.\n   */\n  multiline: PropTypes.bool,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the value is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * The short hint displayed in the input before the user enters a value.\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * If `true`, the label is displayed as required and the `input` element` will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * Number of rows to display when multiline option is set to true.\n   */\n  rows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Maximum number of rows to display when multiline option is set to true.\n   */\n  rowsMax: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Render a [`Select`](/api/select/) element while passing the Input element to `Select` as `input` parameter.\n   * If this option is set you must pass the options of the select as children.\n   */\n  select: PropTypes.bool,\n\n  /**\n   * Props applied to the [`Select`](/api/select/) element.\n   */\n  SelectProps: PropTypes.object,\n\n  /**\n   * The size of the text field.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the `input` element, required for a controlled component.\n   */\n  value: PropTypes.any,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTextField'\n})(TextField);"],"names":["createSvgIcon","React","d","props","formData","setFormData","useState","flightNumber","departure","arrival","departureDate","departureTime","arrivalDate","arrivalTime","seatAvailability","flightIds","setFormIds","AdminService","getAllFlightsDetails","then","ret","arr","data","forEach","element","push","navigateBack","setNavigateBack","open","setOpen","selectedValue","setSelectedValue","handleDialogBoxOpen","handleDialogBoxClose","value","history","pathname","handleChange","e","name","target","prevData","_jsxs","style","display","flexDirection","alignItems","maxWidth","margin","padding","border","children","_jsx","width","marginTop","TextField","label","variant","onChange","fullWidth","type","inputProps","min","Date","toISOString","split","InputLabelProps","shrink","placeholder","Button","className","color","startIcon","Save","onClick","handleSaveClick","key","Object","entries","console","log","includes","saveFlightDetails","Dialog","onClose","DialogTitle","id","DialogActions","autoFocus","BOOKING_API_BASE_URL","admin","flightobj","axios","post","arguments","length","undefined","get","updateFlightsDetailsAsAdmin","put","DeleteFlightDetails","delete","getAllReservation","FormHelperText","ref","classes","_props$component","component","Component","other","disabled","error","filled","focused","required","_objectWithoutProperties","muiFormControl","useFormControl","fcs","formControlState","states","_extends","clsx","root","contained","marginDense","dangerouslySetInnerHTML","__html","withStyles","theme","palette","text","secondary","typography","caption","textAlign","main","marginLeft","marginRight","variantComponent","standard","Input","FilledInput","outlined","OutlinedInput","autoComplete","_props$autoFocus","_props$color","defaultValue","_props$disabled","_props$error","FormHelperTextProps","_props$fullWidth","helperText","hiddenLabel","InputProps","inputRef","_props$multiline","multiline","onBlur","onFocus","_props$required","rows","rowsMax","_props$select","select","SelectProps","_props$variant","InputMore","notched","_InputLabelProps$requ","displayRequired","native","helperTextId","concat","inputLabelId","InputComponent","InputElement","FormControl","InputLabel","htmlFor","Select","labelId","input"],"sourceRoot":""}