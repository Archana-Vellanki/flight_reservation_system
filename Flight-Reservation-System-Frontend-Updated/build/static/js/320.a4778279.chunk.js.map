{"version":3,"file":"static/js/320.a4778279.chunk.js","mappings":"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","sources":["modules/booking/flight-booking.jsx","../node_modules/@material-ui/core/esm/FormHelperText/FormHelperText.js","../node_modules/@material-ui/core/esm/TextField/TextField.js","../node_modules/@material-ui/core/esm/styles/makeStyles.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Grid, Typography, Button, TextField } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  filterContainer: {\r\n    marginBottom: 25\r\n  }\r\n}));\r\n\r\nconst FlightBooking = () => {\r\n  const bookingData = useSelector((state) => state.flightSearch.bookingDetails);\r\n  const [fName, setFName] = useState(\"\");\r\n  const [lName, setLName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [mobile, setMobile] = useState(\"\");\r\n  const [emailValidator, setEmailValidator] = useState(false);\r\n  const [mobileValidator, setMobileValidator] = useState(false);\r\n  const [errorFlag, setErrorFlag] = useState(false);\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  /**\r\n   * @function handleFName\r\n   * @param {object} e\r\n   * @description get first name\r\n   */\r\n  const handleFName = (e) => {\r\n    setFName(e.target.value);\r\n  };\r\n\r\n  /**\r\n   * @function handleLName\r\n   * @param {object} e\r\n   * @description get Last name\r\n   */\r\n  const handleLName = (e) => {\r\n    setLName(e.target.value);\r\n  };\r\n\r\n  /**\r\n   * @function handleEmail\r\n   * @param {object} e\r\n   * @description get email id\r\n   */\r\n  const handleEmail = (e) => {\r\n    const inputEmail = e.target.value;\r\n    const validEmailRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n\r\n    if (inputEmail.match(validEmailRegex) || inputEmail.length === 0) {\r\n      setEmailValidator(false);\r\n    } else {\r\n      setEmailValidator(true);\r\n    }\r\n\r\n    //setEmailValidator(!inputEmail.match(validEmailRegex));\r\n    setEmail(inputEmail);\r\n  };\r\n\r\n  /**\r\n   * @function handleMobile\r\n   * @param {object} e\r\n   * @description get mobile number\r\n   */\r\n  const handleMobile = (e) => {\r\n    const inputMobile = e.target.value;\r\n    const validMobileRegex = /^(\\+\\d{1,3}[- ]?)?\\d{10}$/;\r\n\r\n    if (inputMobile.match(validMobileRegex) || inputMobile.length === 0) {\r\n      setMobileValidator(false);\r\n    } else {\r\n      setMobileValidator(true);\r\n    }\r\n    //setMobileValidator(!inputMobile.match(validMobileRegex));\r\n    setMobile(inputMobile);\r\n  };\r\n\r\n  /**\r\n   * @function handleConfirm\r\n   * @param {object} e\r\n   * @description Confirm the booking\r\n   */\r\n  const handleConfirm = (e) => {\r\n    if (\r\n      fName.length !== 0 &&\r\n      lName.length !== 0 &&\r\n      email.length !== 0 &&\r\n      !emailValidator &&\r\n      mobile.length !== 0 &&\r\n      !mobileValidator\r\n    ) {\r\n      setErrorFlag(false);\r\n      history.push(\"/confirmation\");\r\n    } else {\r\n      setErrorFlag(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid item xs={12} className={classes.filterContainer}>\r\n        <Typography variant=\"h6\">{`Booking Confirmation for Flight ${bookingData?.result?.airlineName} (${bookingData?.result?.flightNumber})`}</Typography>\r\n      </Grid>\r\n      <Grid item xs={12} md={6} className={classes.filterContainer}>\r\n        <TextField\r\n          required\r\n          label=\"First Name\"\r\n          value={fName}\r\n          onChange={handleFName}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} md={6} className={classes.filterContainer}>\r\n        <TextField\r\n          required\r\n          label=\"Last Name\"\r\n          value={lName}\r\n          onChange={handleLName}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} md={6} className={classes.filterContainer}>\r\n        <TextField\r\n          required\r\n          error={emailValidator}\r\n          label=\"Email ID\"\r\n          value={email}\r\n          onChange={handleEmail}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} md={6} className={classes.filterContainer}>\r\n        <TextField\r\n          required\r\n          error={mobileValidator}\r\n          label=\"Mobile Number\"\r\n          value={mobile}\r\n          onChange={handleMobile}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} md={6} className={classes.filterContainer}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={(e) => handleConfirm(e)}\r\n        >{`Confirm Booking`}</Button>\r\n        {errorFlag && (\r\n          <Typography color=\"error\">{`All Fields are mandatory`}</Typography>\r\n        )}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nFlightBooking.propTypes = {\r\n  classes: PropTypes.object,\r\n  history: PropTypes.object\r\n};\r\n\r\nexport default FlightBooking;\r\n","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({\n      color: theme.palette.text.secondary\n    }, theme.typography.caption, {\n      textAlign: 'left',\n      marginTop: 3,\n      margin: 0,\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      },\n      '&$error': {\n        color: theme.palette.error.main\n      }\n    }),\n\n    /* Pseudo-class applied to the root element if `error={true}`. */\n    error: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `margin=\"dense\"`. */\n    marginDense: {\n      marginTop: 4\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` or `variant=\"outlined\"`. */\n    contained: {\n      marginLeft: 14,\n      marginRight: 14\n    },\n\n    /* Pseudo-class applied to the root element if `focused={true}`. */\n    focused: {},\n\n    /* Pseudo-class applied to the root element if `filled={true}`. */\n    filled: {},\n\n    /* Pseudo-class applied to the root element if `required={true}`. */\n    required: {}\n  };\n};\nvar FormHelperText = /*#__PURE__*/React.forwardRef(function FormHelperText(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'p' : _props$component,\n      disabled = props.disabled,\n      error = props.error,\n      filled = props.filled,\n      focused = props.focused,\n      margin = props.margin,\n      required = props.required,\n      variant = props.variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"disabled\", \"error\", \"filled\", \"focused\", \"margin\", \"required\", \"variant\"]);\n\n  var muiFormControl = useFormControl();\n  var fcs = formControlState({\n    props: props,\n    muiFormControl: muiFormControl,\n    states: ['variant', 'margin', 'disabled', 'error', 'filled', 'focused', 'required']\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, (fcs.variant === 'filled' || fcs.variant === 'outlined') && classes.contained, className, fcs.disabled && classes.disabled, fcs.error && classes.error, fcs.filled && classes.filled, fcs.focused && classes.focused, fcs.required && classes.required, fcs.margin === 'dense' && classes.marginDense),\n    ref: ref\n  }, other), children === ' ' ?\n  /*#__PURE__*/\n  // eslint-disable-next-line react/no-danger\n  React.createElement(\"span\", {\n    dangerouslySetInnerHTML: {\n      __html: '&#8203;'\n    }\n  }) : children);\n});\nprocess.env.NODE_ENV !== \"production\" ? FormHelperText.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   *\n   * If `' '` is provided, the component reserves one line height for displaying a future message.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the helper text should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, helper text should be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the helper text should use filled classes key.\n   */\n  filled: PropTypes.bool,\n\n  /**\n   * If `true`, the helper text should use focused classes key.\n   */\n  focused: PropTypes.bool,\n\n  /**\n   * If `dense`, will adjust vertical spacing. This is normally obtained via context from\n   * FormControl.\n   */\n  margin: PropTypes.oneOf(['dense']),\n\n  /**\n   * If `true`, the helper text should use required classes key.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormHelperText'\n})(FormHelperText);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport Input from '../Input';\nimport FilledInput from '../FilledInput';\nimport OutlinedInput from '../OutlinedInput';\nimport InputLabel from '../InputLabel';\nimport FormControl from '../FormControl';\nimport FormHelperText from '../FormHelperText';\nimport Select from '../Select';\nimport withStyles from '../styles/withStyles';\nvar variantComponent = {\n  standard: Input,\n  filled: FilledInput,\n  outlined: OutlinedInput\n};\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {}\n};\n/**\n * The `TextField` is a convenience wrapper for the most common cases (80%).\n * It cannot be all things to all people, otherwise the API would grow out of control.\n *\n * ## Advanced Configuration\n *\n * It's important to understand that the text field is a simple abstraction\n * on top of the following components:\n *\n * - [FormControl](/api/form-control/)\n * - [InputLabel](/api/input-label/)\n * - [FilledInput](/api/filled-input/)\n * - [OutlinedInput](/api/outlined-input/)\n * - [Input](/api/input/)\n * - [FormHelperText](/api/form-helper-text/)\n *\n * If you wish to alter the props applied to the `input` element, you can do so as follows:\n *\n * ```jsx\n * const inputProps = {\n *   step: 300,\n * };\n *\n * return <TextField id=\"time\" type=\"time\" inputProps={inputProps} />;\n * ```\n *\n * For advanced cases, please look at the source of TextField by clicking on the\n * \"Edit this page\" button above. Consider either:\n *\n * - using the upper case props for passing values directly to the components\n * - using the underlying components directly as shown in the demos\n */\n\nvar TextField = /*#__PURE__*/React.forwardRef(function TextField(props, ref) {\n  var autoComplete = props.autoComplete,\n      _props$autoFocus = props.autoFocus,\n      autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      defaultValue = props.defaultValue,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$error = props.error,\n      error = _props$error === void 0 ? false : _props$error,\n      FormHelperTextProps = props.FormHelperTextProps,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      helperText = props.helperText,\n      hiddenLabel = props.hiddenLabel,\n      id = props.id,\n      InputLabelProps = props.InputLabelProps,\n      inputProps = props.inputProps,\n      InputProps = props.InputProps,\n      inputRef = props.inputRef,\n      label = props.label,\n      _props$multiline = props.multiline,\n      multiline = _props$multiline === void 0 ? false : _props$multiline,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      placeholder = props.placeholder,\n      _props$required = props.required,\n      required = _props$required === void 0 ? false : _props$required,\n      rows = props.rows,\n      rowsMax = props.rowsMax,\n      _props$select = props.select,\n      select = _props$select === void 0 ? false : _props$select,\n      SelectProps = props.SelectProps,\n      type = props.type,\n      value = props.value,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"autoComplete\", \"autoFocus\", \"children\", \"classes\", \"className\", \"color\", \"defaultValue\", \"disabled\", \"error\", \"FormHelperTextProps\", \"fullWidth\", \"helperText\", \"hiddenLabel\", \"id\", \"InputLabelProps\", \"inputProps\", \"InputProps\", \"inputRef\", \"label\", \"multiline\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"placeholder\", \"required\", \"rows\", \"rowsMax\", \"select\", \"SelectProps\", \"type\", \"value\", \"variant\"]);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (select && !children) {\n      console.error('Material-UI: `children` must be passed when using the `TextField` component with `select`.');\n    }\n  }\n\n  var InputMore = {};\n\n  if (variant === 'outlined') {\n    if (InputLabelProps && typeof InputLabelProps.shrink !== 'undefined') {\n      InputMore.notched = InputLabelProps.shrink;\n    }\n\n    if (label) {\n      var _InputLabelProps$requ;\n\n      var displayRequired = (_InputLabelProps$requ = InputLabelProps === null || InputLabelProps === void 0 ? void 0 : InputLabelProps.required) !== null && _InputLabelProps$requ !== void 0 ? _InputLabelProps$requ : required;\n      InputMore.label = /*#__PURE__*/React.createElement(React.Fragment, null, label, displayRequired && \"\\xA0*\");\n    }\n  }\n\n  if (select) {\n    // unset defaults from textbox inputs\n    if (!SelectProps || !SelectProps.native) {\n      InputMore.id = undefined;\n    }\n\n    InputMore['aria-describedby'] = undefined;\n  }\n\n  var helperTextId = helperText && id ? \"\".concat(id, \"-helper-text\") : undefined;\n  var inputLabelId = label && id ? \"\".concat(id, \"-label\") : undefined;\n  var InputComponent = variantComponent[variant];\n  var InputElement = /*#__PURE__*/React.createElement(InputComponent, _extends({\n    \"aria-describedby\": helperTextId,\n    autoComplete: autoComplete,\n    autoFocus: autoFocus,\n    defaultValue: defaultValue,\n    fullWidth: fullWidth,\n    multiline: multiline,\n    name: name,\n    rows: rows,\n    rowsMax: rowsMax,\n    type: type,\n    value: value,\n    id: id,\n    inputRef: inputRef,\n    onBlur: onBlur,\n    onChange: onChange,\n    onFocus: onFocus,\n    placeholder: placeholder,\n    inputProps: inputProps\n  }, InputMore, InputProps));\n  return /*#__PURE__*/React.createElement(FormControl, _extends({\n    className: clsx(classes.root, className),\n    disabled: disabled,\n    error: error,\n    fullWidth: fullWidth,\n    hiddenLabel: hiddenLabel,\n    ref: ref,\n    required: required,\n    color: color,\n    variant: variant\n  }, other), label && /*#__PURE__*/React.createElement(InputLabel, _extends({\n    htmlFor: id,\n    id: inputLabelId\n  }, InputLabelProps), label), select ? /*#__PURE__*/React.createElement(Select, _extends({\n    \"aria-describedby\": helperTextId,\n    id: id,\n    labelId: inputLabelId,\n    value: value,\n    input: InputElement\n  }, SelectProps), children) : InputElement, helperText && /*#__PURE__*/React.createElement(FormHelperText, _extends({\n    id: helperTextId\n  }, FormHelperTextProps), helperText));\n});\nprocess.env.NODE_ENV !== \"production\" ? TextField.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * This prop helps users to fill forms faster, especially on mobile devices.\n   * The name can be confusing, as it's more like an autofill.\n   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).\n   */\n  autoComplete: PropTypes.string,\n\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * The default value of the `input` element.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the `input` element will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label will be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * Props applied to the [`FormHelperText`](/api/form-helper-text/) element.\n   */\n  FormHelperTextProps: PropTypes.object,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The helper text content.\n   */\n  helperText: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  hiddenLabel: PropTypes.bool,\n\n  /**\n   * The id of the `input` element.\n   * Use this prop to make `label` and `helperText` accessible for screen readers.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Props applied to the [`InputLabel`](/api/input-label/) element.\n   */\n  InputLabelProps: PropTypes.object,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Props applied to the Input element.\n   * It will be a [`FilledInput`](/api/filled-input/),\n   * [`OutlinedInput`](/api/outlined-input/) or [`Input`](/api/input/)\n   * component depending on the `variant` prop value.\n   */\n  InputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The label content.\n   */\n  label: PropTypes.node,\n\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   */\n  margin: PropTypes.oneOf(['dense', 'none', 'normal']),\n\n  /**\n   * If `true`, a textarea element will be rendered instead of an input.\n   */\n  multiline: PropTypes.bool,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the value is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * The short hint displayed in the input before the user enters a value.\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * If `true`, the label is displayed as required and the `input` element` will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * Number of rows to display when multiline option is set to true.\n   */\n  rows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Maximum number of rows to display when multiline option is set to true.\n   */\n  rowsMax: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Render a [`Select`](/api/select/) element while passing the Input element to `Select` as `input` parameter.\n   * If this option is set you must pass the options of the select as children.\n   */\n  select: PropTypes.bool,\n\n  /**\n   * Props applied to the [`Select`](/api/select/) element.\n   */\n  SelectProps: PropTypes.object,\n\n  /**\n   * The size of the text field.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the `input` element, required for a controlled component.\n   */\n  value: PropTypes.any,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTextField'\n})(TextField);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { makeStyles as makeStylesWithoutDefault } from '@material-ui/styles';\nimport defaultTheme from './defaultTheme';\n\nfunction makeStyles(stylesOrCreator) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return makeStylesWithoutDefault(stylesOrCreator, _extends({\n    defaultTheme: defaultTheme\n  }, options));\n}\n\nexport default makeStyles;"],"names":["useStyles","makeStyles","filterContainer","marginBottom","FlightBooking","_bookingData$result","_bookingData$result2","bookingData","useSelector","state","flightSearch","bookingDetails","fName","setFName","useState","lName","setLName","email","setEmail","mobile","setMobile","emailValidator","setEmailValidator","mobileValidator","setMobileValidator","errorFlag","setErrorFlag","history","useHistory","classes","_jsxs","Grid","container","children","_jsx","item","xs","className","Typography","variant","result","airlineName","flightNumber","md","TextField","required","label","value","onChange","e","target","error","inputEmail","match","length","inputMobile","Button","color","onClick","push","FormHelperText","React","props","ref","_props$component","component","Component","other","disabled","filled","focused","margin","_objectWithoutProperties","muiFormControl","useFormControl","fcs","formControlState","states","_extends","clsx","root","contained","marginDense","dangerouslySetInnerHTML","__html","withStyles","theme","palette","text","secondary","typography","caption","textAlign","marginTop","main","marginLeft","marginRight","name","variantComponent","standard","Input","FilledInput","outlined","OutlinedInput","autoComplete","_props$autoFocus","autoFocus","_props$color","defaultValue","_props$disabled","_props$error","FormHelperTextProps","_props$fullWidth","fullWidth","helperText","hiddenLabel","id","InputLabelProps","inputProps","InputProps","inputRef","_props$multiline","multiline","onBlur","onFocus","placeholder","_props$required","rows","rowsMax","_props$select","select","SelectProps","type","_props$variant","InputMore","shrink","notched","_InputLabelProps$requ","displayRequired","native","undefined","helperTextId","concat","inputLabelId","InputComponent","InputElement","FormControl","InputLabel","htmlFor","Select","labelId","input","stylesOrCreator","options","arguments","makeStylesWithoutDefault","defaultTheme"],"sourceRoot":""}